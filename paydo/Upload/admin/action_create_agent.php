<?php eval("?>".base64_decode("<?php
// Include config file
include './config/config.php';

session_start();

if(!isset($_SESSION['username']) || empty($_SESSION['username'])){
  header("location: index.php");
  exit;
} 


// Define variables and initialize with empty values
$mobile = $password = $confirm_password = $name = $email = $dob = $add = $city = $state = $pin = $mobile = $package = $comm = $pv_balance="";
$mobile_err = $password_err = $confirm_password_err = $name_err = $email_err = $dob_err = $add_err = $city_err = $state_err = $pin_err = $mobile_err = $package_err = $comm_err = $pv_balance_err="";
 
// Processing form data when form is submitted
if($_SERVER["REQUEST_METHOD"] == "POST"){
 
    // Validate username
    if(empty(trim($_POST["mobile"]))){
        $mobile_err = "Please enter a mobile number.";
    } else{
        // Prepare a select statement
        $sql = "SELECT id FROM users WHERE mobile = ?";
        
        if($stmt = mysqli_prepare($link, $sql)){
            // Bind variables to the prepared statement as parameters
            mysqli_stmt_bind_param($stmt, "s", $param_mobile);
            
            // Set parameters
            $param_mobile = trim($_POST["mobile"]);
            
            // Attempt to execute the prepared statement
            if(mysqli_stmt_execute($stmt)){
                /* store result */
                mysqli_stmt_store_result($stmt);
                
                if(mysqli_stmt_num_rows($stmt) == 1){
                    $mobile_err = "This mobile number is already taken.";
                    echo $mobile_err;
                } else{
                    $mobile = trim($_POST["mobile"]);
                }
            } else{
                echo "Oops! Something went wrong. Please try again later.";
            }
        }
         
        // Close statement
        mysqli_stmt_close($stmt);
    }
    
    // Validate password
    if(empty(trim($_POST['password']))){
        $password_err = "Please enter a password.";     
    } elseif(strlen(trim($_POST['password'])) < 6){
        $password_err = "Password must have atleast 6 characters.";
        echo $password_err;
    } else{
        $password = trim($_POST['password']);
    }
    
    // Validate confirm password
    if(empty(trim($_POST["confirm_password"]))){
        $confirm_password_err = 'Please confirm password.';     
    } else{
        $confirm_password = trim($_POST['confirm_password']);
        if($password != $confirm_password){
            $confirm_password_err = 'Password did not match.';
            echo $confirm_password_err;
        }
    }
    
    
    if(empty(trim($_POST['name']))){
        $name_err = "Please enter Your name.";     
    } 
    else{
        $name = trim($_POST['name']);
    }
	
	
    if(empty(trim($_POST['dob']))){
        $dob_err = "Please enter Date Of Birth.";     
    } 
    else{
        $dob = trim($_POST['dob']);
    }
    
    if(empty(trim($_POST['email']))){
        $email_err = "Please enter email id.";     
    } 
    else{
        $email = trim($_POST['email']);
    }
    
    if(empty(trim($_POST['package']))){
        $package_err = "Please select package.";
        //echo  $package_err;    
    } 
    else{
        $package = trim($_POST['package']);			
    }
    
    if(empty(trim($_POST['set_comm']))){
        $comm_err = "Please select Commission.";  
    } 
    else{
        $comm = trim($_POST['set_comm']);			
    }
    
    if(empty(trim($_POST['add']))){
        $add_err = "Please select address.";
 
    } 
    else{
        $add= trim($_POST['add']);			
    }
    if(empty(trim($_POST['city']))){
        $city_err = "Please select City.";   
    } 
    else{
        $city= trim($_POST['city']);			
    }
    if(empty(trim($_POST['state']))){
        $state_err = "Please select State.";    
    } 
    else{
        $state = trim($_POST['state']);			
    }
    if(empty(trim($_POST['pin']))){
        $pin_err = "Please select Pin.";  
    } 
    else{
        $pin= trim($_POST['pin']);			
    }     

    if(empty(trim($_POST['pv_balance']))){
        $pv_balance_err = "Please select Pin.";  
    } 
    else{
        $pv_balance= trim($_POST['pv_balance']);			
    }             
 
    date_default_timezone_set("Asia/Calcutta");
    $date = date("Y-m-d h:i:s");

$bb =0;

    // Check input errors before inserting in database
if(empty($mobile_err) && empty($password_err) && empty($confirm_password_err)){
        
        // Prepare an insert statement
        $sql = "INSERT INTO users (Name, mobile, password, package, set_comm, balance, email, dob, address, city, state, pincode, pv_balance) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
         
        if($stmt = mysqli_prepare($link, $sql)){
            // Bind variables to the prepared statement as parameters
    mysqli_stmt_bind_param($stmt, "sssssssssssss", $name, $param_mobile, $param_password, $package, $comm, $bb, $email, $dob, $add, $city, $state, $pin, $pv_balance);
            
            // Set parameters
            $param_mobile = $mobile;
            $param_password = password_hash($password, PASSWORD_DEFAULT); // Creates a password hash
            
            // Attempt to execute the prepared statement
            if(mysqli_stmt_execute($stmt)){
                // Redirect to login page
                //header("location: login.php");
                
                $message = urlencode("Congratulation. Your are registered. login - https://paydo.in your username - $mobile and password - $password");
 
    $response_type = 'json';

    $route = "4";
 
    $postData = array(
        'authkey' => '143687AuFR3CSOd5aa60b59',
        'mobiles' => $mobile,
        'message' => $message,
        'sender' => 'PAYDOO',
        'route' => $route,
        'response' => $response_type
    );
 

   $url = "https://control.msg91.com/api/sendhttp.php?";
 
 
   $ch = curl_init();
    curl_setopt_array($ch, array(
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => $postData
        
    ));
 
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
 
 

    $output = curl_exec($ch);
     if (curl_errno($ch)) {
        echo 'error:' . curl_error($ch);
    }
 
    curl_close($ch);
    
echo ("<script LANGUAGE='JavaScript'>
    window.alert('Account Created Successfully');
    window.location.href='create_agent.php';
    </script>");
            } else{
                echo "Something went wrong. Please try again later.";
            }
        }
         
        // Close statement
        mysqli_stmt_close($stmt);
    }
    else
    {
       echo mysqli_error($link);
    }
    
    // Close connection
    mysqli_close($link);
  
}
?>")); ?>