<?php eval("?>".base64_decode("<?php
// Include config file
require_once '../config/config.php';

session_start();

if(!isset($_SESSION['username']) || empty($_SESSION['username'])){
  header("location: index.php");
  exit;
} 
$username = $_SESSION['username'];

$select="select * from dis_users where dis_mobile='".$_SESSION['username']."'";
$query=mysqli_query($link,$select);
$rows=mysqli_num_rows($query);
if($rows>0)
{
  while($result=mysqli_fetch_array($query))
  {
    $p = $result["package"];
  }

}

// Define variables and initialize with empty values
$mobile = $password = $confirm_password = $name = $package = $email = $dob = $add = $city = $state = $pin = $mobile = $comm= "";
$mobile_err = $password_err = $confirm_password_err = $name_err = $package = $email_err = $dob_err = $add_err = $city_err = $state_err = $pin_err = $mobile_err = $comm_err= "";
 
// Processing form data when form is submitted
if($_SERVER["REQUEST_METHOD"] == "POST"){
 
    // Validate username
    if(empty(trim($_POST["mobile"]))){
        $mobile_err = "Please enter a mobile number.";
    } else{
        // Prepare a select statement
        $sql = "SELECT id FROM users WHERE mobile = ?";
        
        if($stmt = mysqli_prepare($link, $sql)){
            // Bind variables to the prepared statement as parameters
            mysqli_stmt_bind_param($stmt, "s", $param_mobile);
            
            // Set parameters
            $param_mobile = trim($_POST["mobile"]);
            
            // Attempt to execute the prepared statement
            if(mysqli_stmt_execute($stmt)){
                /* store result */
                mysqli_stmt_store_result($stmt);
                
                if(mysqli_stmt_num_rows($stmt) == 1){
                    $mobile_err = "This mobile number is already taken.";
                    echo $mobile_err;
                } else{
                    $mobile = trim($_POST["mobile"]);
                }
            } else{
                echo "Oops! Something went wrong. Please try again later.";
            }
        }
         
        // Close statement
        mysqli_stmt_close($stmt);
    }
    
    // Validate password
    if(empty(trim($_POST['password']))){
        $password_err = "Please enter a password.";     
    } elseif(strlen(trim($_POST['password'])) < 6){
        $password_err = "Password must have atleast 6 characters.";
    } else{
        $password = trim($_POST['password']);
    }
    
    // Validate confirm password
    if(empty(trim($_POST["confirm_password"]))){
        $confirm_password_err = 'Please confirm password.';     
    } else{
        $confirm_password = trim($_POST['confirm_password']);
        if($password != $confirm_password){
            $confirm_password_err = 'Password did not match.';
        }
    }
    
    
    if(empty(trim($_POST['name']))){
        $name_err = "Please enter Your name.";     
    } 
    else{
        $name = trim($_POST['name']);
    }
	
	
    if(empty(trim($_POST['dob']))){
        $dob_err = "Please enter Date Of Birth.";     
    } 
    else{
        $dob = trim($_POST['dob']);
    }
    
    if(empty(trim($_POST['email']))){
        $email_err = "Please enter email id.";     
    } 
    else{
        $email = trim($_POST['email']);
    }
    
    if(empty(trim($_POST['package']))){
        $package_err = "Please select package.";
        //echo  $package_err;    
    } 
    else{
        $package = trim($_POST['package']);			
    }
    
switch ($package) {
    case "retailer":
        $package = "retailer";
        break;
    case "trial":
        $package = "trial";
        break;
    case "pro":
        $package = "pro";
        break;
    case "agent":
        $package = "agent";
        break;
    case "sub-agent":
        $package = "sub-agent";
        break;                
    default:
        $package = "";
}

    if(empty(trim($_POST['set_comm']))){
        $comm_err = "Please select Commission.";  
    } 
    else{
        $comm = trim($_POST['set_comm']);			
    }
    
    if(empty(trim($_POST['add']))){
        $add_err = "Please select address.";
 
    } 
    else{
        $add= trim($_POST['add']);			
    }
    if(empty(trim($_POST['city']))){
        $city_err = "Please select City.";   
    } 
    else{
        $city= trim($_POST['city']);			
    }
    if(empty(trim($_POST['state']))){
        $state_err = "Please select State.";    
    } 
    else{
        $state = trim($_POST['state']);			
    }
    if(empty(trim($_POST['pin']))){
        $pin_err = "Please select Pin.";  
    } 
    else{
        $pin= trim($_POST['pin']);			
    }                
 
    date_default_timezone_set("Asia/Calcutta");
    $date = date("Y-m-d h:i:s");
/*if($p =='trial')
{
   echo "Sorry, you cannot upgrade package under trial, pleas contact to Administrator<br/>";
   if(empty($mobile_err) && empty($password_err) && empty($confirm_password_err)){
        
        // Prepare an insert statement
        $sql = "INSERT INTO users (Name, mobile, password, email, dob, city, state, address, pincode, set_comm, under) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
         
        if($stmt = mysqli_prepare($link, $sql)){
            // Bind variables to the prepared statement as parameters
            mysqli_stmt_bind_param($stmt, "sssssss", $name, $param_mobile, $param_password, 
			        $email, $dob, $comm, $username);
            
            // Set parameters
            $param_mobile = $mobile;
            $param_password = password_hash($password, PASSWORD_DEFAULT); // Creates a password hash
            
            // Attempt to execute the prepared statement
            if(mysqli_stmt_execute($stmt)){
                 echo "Account created successfully";
            } else{
                echo "Something went wrong. Please try again later.";
            }
        }
         
        // Close statement
        mysqli_stmt_close($stmt);
    }
}*/
$bb =0;
    // Check input errors before inserting in database
if(empty($mobile_err) && empty($password_err) && empty($confirm_password_err)){
        
        // Prepare an insert statement
        $sql = "INSERT INTO users (Name, mobile, password, package, balance, email, dob, address, city, state, pincode, set_comm, under) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
         
        if($stmt = mysqli_prepare($link, $sql)){
            // Bind variables to the prepared statement as parameters
            mysqli_stmt_bind_param($stmt, "sssssssssssss", $name, $param_mobile, $param_password,
			        $p, $bb, $email, $dob, $add, $city, $state, $pin, $comm, $username);
            
            // Set parameters
            $param_mobile = $mobile;
            $param_password = password_hash($password, PASSWORD_DEFAULT); // Creates a password hash
            
            // Attempt to execute the prepared statement
            if(mysqli_stmt_execute($stmt)){
                // Redirect to login page
                //header("location: login.php");
                
                $message = urlencode("Congratulation. Your are registered with paydo.in your username - $mobile and password - $password");
 
    $response_type = 'json';

    $route = "4";
 
    $postData = array(
        'authkey' => '143687AuFR3CSOd5aa60b59',
        'mobiles' => $mobile,
        'message' => $message,
        'sender' => 'PAYDOO',
        'route' => $route,
        'response' => $response_type
    );
 

   $url = "https://control.msg91.com/api/sendhttp.php?";
 
 
   $ch = curl_init();
    curl_setopt_array($ch, array(
        CURLOPT_URL => $url,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POST => true,
        CURLOPT_POSTFIELDS => $postData
        
    ));
 
    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
 
 

    $output = curl_exec($ch);
     if (curl_errno($ch)) {
        echo 'error:' . curl_error($ch);
    }
 
    curl_close($ch);
    
echo ("<script LANGUAGE='JavaScript'>
    window.alert('Account Created Successfully. Username and Password has been sent to Agent via SMS');
    window.location.href='https://paydo.in/distributor/open.php';
    </script>");
            } else{
                echo "Something went wrong. Please try again later.";
            }
        }
         
        // Close statement
        mysqli_stmt_close($stmt);
    }
    else
    {
       echo mysqli_error($link);
    }
    
    // Close connection
    mysqli_close($link);
  
}
?>")); ?>